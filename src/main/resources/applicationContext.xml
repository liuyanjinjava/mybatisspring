<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
<!--spring希望可以扫描所有其他的业务逻辑组件-->
    <context:component-scan base-package="com.lyj">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    <!--spring 用来控制业务逻辑，数据源，事务控制，aop等等都是在spring来做的-->
    <context:property-placeholder location="classpath:dbConfig.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property  name="url" value="${jdbc.url}"></property>
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    <!--spring的事务管理,使用事务管理属性来控制dataSource-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--开启基于注解的事务-->
    <tx:annotation-driven />

    <!--整合mybatis了-->
    <!--首先要搞清楚整合mybatis，
    整合的目的：1.spring来管理所有组件，包括mybatis的这些mapper。
    mapper的实现类
    service==》dao 只需要spring提供的@Autowired：自动注入mapper
              2.spring用来管理事务，spring声明式事务的管理；


    -->
    <!--会创建出sqlSessionFactory对象-->
   <bean id="sessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:/conf/mybatis-config.xml"/>
        <!--mapperLocations指定mapper文件的位置-->
       <property name="mapperLocations" value="classpath:mybatisMapper/*.xml"/>
   </bean>

    <!--扫描所有的mapper接口让这些mapper可以自己注入-->
  <mybatis-spring:scan base-package="com.lyj.dao"></mybatis-spring:scan>
</beans>